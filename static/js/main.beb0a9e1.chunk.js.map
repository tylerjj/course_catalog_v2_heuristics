{"version":3,"sources":["SearchAndFilter.js","Sidebar.js","Subsection.js","Section.js","Course.js","CourseArea.js","CompletedCourse.js","CompletedCourseArea.js","RecommendedCourse.js","RecommendedCourseArea.js","App.js","serviceWorker.js","index.js"],"names":["SearchAndFilter","courses","search","subject","minimumCredits","maximumCredits","interest","coursesAfterSearch","course","keywords","includes","push","coursesAfterInterest","coursesAfterSubject","coursesAfterMinimumCredits","credits","parseInt","coursesAfterMaximumCredits","Sidebar","props","state","searchAndFilter","React","createRef","this","current","setCourses","value","e","indexOf","key","preventDefault","subjectOptions","subjects","interestOptions","interests","Card","style","width","marginLeft","height","position","Body","Title","Form","Group","controlId","onKeyDown","handleSearchKeyDown","onChange","Label","display","flexDirection","Control","type","placeholder","autoComplete","ref","as","getSubjectOptions","getInterestOptions","handleCreditsKeyDown","marginRight","marginTop","Component","Subsection","Accordion","Item","eventKey","subsectionKey","Header","variant","alignItems","getSubsectionButton","sectionKey","data","JSON","stringify","time","section","subsection","buttonVariant","buttonOnClick","addSubsection","buttonText","courseKey","cartCourses","some","_subsection","number","removeSubsection","Button","onClick","right","stopPropagation","missingRequisites","addCartCourse","removeCartCourse","Section","getSectionButton","getSubsections","subsections","i","length","defaultActiveKey","addSection","removeSection","Course","expanded","showModal","showRequisitesModal","addFunc","getMissingCourseRequisites","bind","missingRequisitesLaunchModal","addToCart","marginBottom","className","inCart","maxWidth","name","getExpansionButton","Subtitle","getCredits","getDescription","openModal","Modal","show","onHide","closeModal","centered","closeButton","getSections","Footer","getCourseButton","closeRequisiteModal","cartMode","addCourse","removeCourse","sections","completedCourses","requisites","requisite","requisiteMet","courseNumber","openRequisiteModal","missingRequisitesDisplay","console","log","toString","reqString","setState","setExpanded","fontSize","padding","top","description","CourseArea","margin","nextProps","getCourses","CompletedCourse","setRating","rating","updateRating","courseData","ratingOptions","ratings","getRating","getRatingOptionLabel","getRatingOptions","CompletedCourseArea","RecommendedCourse","recommenders","recommenderDisplay","keywordDisplay","keyword","getRecommenderDisplay","RecommendedCourseArea","allCourses","recommendedCourses","recommendedCourse","completedCourse","recommender","getRecommendedCourses","recommendations","recommendation","getRecommendations","HOST","App","filteredCourses","loadInitialState","a","courseURL","fetch","json","completedCourseURL","completedCourseData","getSubjects","getInterests","getCompletedCourses","getRatings","j","numbers","thisCourse","score","newCartCourses","parse","courseIndex","findIndex","x","c","forEach","splice","Object","keys","cartData","find","Tabs","zIndex","backgroundColor","Tab","title","paddingTop","getCartData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.beb0a9e1.chunk.js","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, search, subject, minimumCredits, maximumCredits, interest) {\r\n    if (subject !== \"\" && search !== null) {\r\n      let coursesAfterSearch = [];\r\n\r\n      for (const course of courses) {\r\n        for (const keyword of course.keywords) {\r\n          if (keyword.includes(search)) {\r\n            coursesAfterSearch.push(course);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      courses = coursesAfterSearch;\r\n    }\r\n\r\n    if (interest !== \"All\") {\r\n      let coursesAfterInterest = [];\r\n\r\n      for (const course of courses) {\r\n        if (course.keywords.includes(interest)) {\r\n          coursesAfterInterest.push(course);\r\n        }\r\n      }\r\n\r\n      courses = coursesAfterInterest;\r\n    }\r\n\r\n    if (subject !== \"All\") {\r\n      let coursesAfterSubject = [];\r\n\r\n      for (const course of courses) {\r\n        if (course.subject === subject) coursesAfterSubject.push(course);\r\n      }\r\n      courses = coursesAfterSubject;\r\n    }\r\n\r\n    if (minimumCredits !== \"\") {\r\n      let coursesAfterMinimumCredits = [];\r\n\r\n      for (const course of courses) {\r\n        if (course.credits >= parseInt(minimumCredits))\r\n          coursesAfterMinimumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMinimumCredits;\r\n    }\r\n\r\n    if (maximumCredits !== \"\") {\r\n      let coursesAfterMaximumCredits = [];\r\n\r\n      for (const course of courses) {\r\n        if (course.credits <= parseInt(maximumCredits))\r\n          coursesAfterMaximumCredits.push(course);\r\n      }\r\n      courses = coursesAfterMaximumCredits;\r\n    }\r\n\r\n    return courses;\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport SearchAndFilter from \"./SearchAndFilter\";\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.searchAndFilter = new SearchAndFilter();\r\n    this.subject = React.createRef();\r\n    this.minimumCredits = React.createRef();\r\n    this.maximumCredits = React.createRef();\r\n    this.search = React.createRef();\r\n    this.interest = React.createRef();\r\n  }\r\n\r\n  setCourses() {\r\n    if (\r\n      this.subject.current != null &&\r\n      this.minimumCredits.current != null &&\r\n      this.maximumCredits.current != null &&\r\n      this.interest.current != null\r\n    ) {\r\n      this.props.setCourses(\r\n        this.searchAndFilter.searchAndFilter(\r\n          this.props.courses,\r\n          this.search.current.value,\r\n          this.subject.current.value,\r\n          this.minimumCredits.current.value,\r\n          this.maximumCredits.current.value,\r\n          this.interest.current.value,\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCreditsKeyDown(e) {\r\n    if (\r\n      [\r\n        \"0\",\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"Backspace\",\r\n        \"ArrowLeft\",\r\n        \"ArrowRight\",\r\n        \"ArrowUp\",\r\n        \"ArrowDown\",\r\n        \"Tab\",\r\n      ].indexOf(e.key) === -1\r\n    )\r\n      e.preventDefault();\r\n  }\r\n\r\n  handleSearchKeyDown(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.search.current.value = \"\";\r\n      this.setCourses();\r\n    }\r\n  }\r\n\r\n  getSubjectOptions() {\r\n    let subjectOptions = [];\r\n\r\n    for (const subject of this.props.subjects) {\r\n      subjectOptions.push(<option key={subject}>{subject}</option>);\r\n    }\r\n\r\n    return subjectOptions;\r\n  }\r\n\r\n  getInterestOptions() {\r\n    let interestOptions = [];\r\n\r\n    for (const interest of this.props.interests) {\r\n      interestOptions.push(<option key={interest}>{interest}</option>)\r\n    }\r\n\r\n    return interestOptions;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card\r\n          style={{\r\n            width: \"calc(20vw - 5px)\",\r\n            marginLeft: \"5px\",\r\n            height: \"calc(100vh - 52px)\",\r\n            position: \"fixed\",\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Search and Filter</Card.Title>\r\n            <Form>\r\n              <Form.Group\r\n                controlId=\"formKeywords\"\r\n                onKeyDown={(e) => this.handleSearchKeyDown(e)}\r\n                onChange={() => this.setCourses()}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Form.Label>Search</Form.Label>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"keyword search\"\r\n                    autoComplete=\"off\"\r\n                    ref={this.search}\r\n                  />\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formSubject\">\r\n                <Form.Label>Subject</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  ref={this.subject}\r\n                  onChange={() => this.setCourses()}\r\n                  style={{ height: \"125%\" }}\r\n                >\r\n                  {this.getSubjectOptions()}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formInterest\">\r\n                <Form.Label>Interest</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  ref={this.interest}\r\n                  onChange={() => this.setCourses()}\r\n                  style={{ height: \"125%\" }}\r\n                >\r\n                  {this.getInterestOptions()}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <Form.Group\r\n                  controlId=\"minimumCredits\"\r\n                  onChange={() => this.setCourses()}\r\n                  onKeyDown={(e) => this.handleCreditsKeyDown(e)}\r\n                >\r\n                  <Form.Label>Credits</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"minimum\"\r\n                    autoComplete=\"off\"\r\n                    ref={this.minimumCredits}\r\n                  />\r\n                </Form.Group>\r\n                <div\r\n                  style={{\r\n                    marginLeft: \"5px\",\r\n                    marginRight: \"5px\",\r\n                    marginTop: \"38px\",\r\n                  }}\r\n                >\r\n                  to\r\n                </div>\r\n                <Form.Group\r\n                  controlId=\"maximumCredits\"\r\n                  style={{ marginTop: \"32px\" }}\r\n                  onChange={() => this.setCourses()}\r\n                  onKeyDown={(e) => this.handleCreditsKeyDown(e)}\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"maximum\"\r\n                    autoComplete=\"off\"\r\n                    ref={this.maximumCredits}\r\n                  />\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass Subsection extends React.Component {\r\n  render() {\r\n    return (\r\n      <Accordion.Item\r\n        key={this.props.subsectionKey}\r\n        eventKey={this.props.subsectionKey}\r\n      >\r\n        <Accordion.Header\r\n          variant=\"link\"\r\n          style={{ height: 63, display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          {this.props.subsectionKey}\r\n          {this.getSubsectionButton(this.props.sectionKey, this.props.data)}\r\n        </Accordion.Header>\r\n        <Accordion.Body>{JSON.stringify(this.props.data.time)}</Accordion.Body>\r\n      </Accordion.Item>\r\n    );\r\n  }\r\n\r\n  getSubsectionButton(section, subsection) {\r\n    let buttonVariant = \"dark\";\r\n    let buttonOnClick = (e) => this.addSubsection(e, section, subsection);\r\n    let buttonText = \"Add Subsection\";\r\n\r\n    if (this.props.courseKey in this.props.cartCourses) {\r\n      if (section in this.props.cartCourses[this.props.courseKey]) {\r\n        if (\r\n          this.props.cartCourses[this.props.courseKey][section].some(\r\n            (_subsection) => _subsection.number === subsection.number\r\n          )\r\n        ) {\r\n          buttonVariant = \"outline-dark\";\r\n          buttonOnClick = (e) => this.removeSubsection(e, section, subsection);\r\n          buttonText = \"Remove Subsection\";\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        as=\"a\"\r\n        variant={buttonVariant}\r\n        onClick={buttonOnClick}\r\n        style={{ position: \"absolute\", right: 50 }}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  addSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    if (this.props.missingRequisites(section, subsection) === false) {\r\n      this.props.addCartCourse({\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection,\r\n      });\r\n    }\r\n  }\r\n\r\n  removeSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse({\r\n      course: this.props.courseKey,\r\n      section: section,\r\n      subsection: subsection,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Subsection;\r\n","import React from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport \"./App.css\";\r\nimport Subsection from \"./Subsection\";\r\n\r\nclass Section extends React.Component {\r\n  render() {\r\n    return (\r\n      <Accordion.Item\r\n        key={this.props.sectionKey}\r\n        eventKey={this.props.sectionKey}\r\n      >\r\n        <Accordion.Header\r\n          variant=\"link\"\r\n          style={{ height: 63, display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          {\"Section \" + this.props.sectionKey}\r\n          {this.getSectionButton(this.props.sectionKey)}\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          <Card.Body>\r\n            {JSON.stringify(this.props.data.time)}\r\n            {this.getSubsections()}\r\n          </Card.Body>\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    );\r\n  }\r\n\r\n  getSubsections() {\r\n    let subsections = [];\r\n\r\n    for (let i = 0; i < this.props.data.subsections.length; i++) {\r\n      subsections.push(\r\n        <Subsection\r\n          key={this.props.data.subsections[i].number}\r\n          data={this.props.data.subsections[i]}\r\n          addCartCourse={this.props.addCartCourse}\r\n          removeCartCourse={this.props.removeCartCourse}\r\n          cartCourses={this.props.cartCourses}\r\n          courseKey={this.props.courseKey}\r\n          sectionKey={this.props.sectionKey}\r\n          subsectionKey={i}\r\n          missingRequisites={this.props.missingRequisites}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Accordion defaultActiveKey=\"0\">{subsections}</Accordion>;\r\n  }\r\n\r\n  getSectionButton(section) {\r\n    let buttonVariant = \"dark\";\r\n    let buttonOnClick = (e) => this.addSection(e, section);\r\n    let buttonText = \"Add Section\";\r\n\r\n    if (this.props.courseKey in this.props.cartCourses) {\r\n      if (section in this.props.cartCourses[this.props.courseKey]) {\r\n        buttonVariant = \"outline-dark\";\r\n        buttonOnClick = (e) => this.removeSection(e, section);\r\n        buttonText = \"Remove Section\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        as=\"a\"\r\n        variant={buttonVariant}\r\n        onClick={buttonOnClick}\r\n        style={{ position: \"absolute\", right: 50 }}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  addSection(e, section) {\r\n    e.stopPropagation();\r\n    if (this.props.missingRequisites(section, null) === false) {\r\n      this.props.addCartCourse({\r\n        course: this.props.courseKey,\r\n        section: section,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  removeSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse({\r\n      course: this.props.courseKey,\r\n      section: section,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\n\r\nimport \"./App.css\";\r\nimport Section from \"./Section\";\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false,\r\n      showRequisitesModal: false,\r\n      addFunc: () => { },\r\n    };\r\n    this.getMissingCourseRequisites = this.getMissingCourseRequisites.bind(this);\r\n    this.missingRequisitesLaunchModal = this.missingRequisitesLaunchModal.bind(this);\r\n    this.addToCart = this.addToCart.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ width: \"66%\", marginTop: \"5px\", marginBottom: \"5px\" }\r\n      }>\r\n        <Card.Body className={this.inCart() ? 'bg-light' : 'bg-white'}>\r\n          <Card.Title>\r\n            <div style={{ maxWidth: 500 }}>{this.props.data.name}{this.inCart() ? <p className=\"ml-2\">✅ (Added to Cart)</p> : \"\"}</div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {this.props.data.number} - {this.getCredits()}\r\n          </Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant=\"dark\" onClick={() => this.openModal()}>\r\n            View sections\r\n          </Button>\r\n        </Card.Body>\r\n        <Modal\r\n          show={this.state.showModal}\r\n          onHide={() => this.closeModal()}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{this.getSections()}</Modal.Body>\r\n          <Modal.Footer>\r\n            {this.getCourseButton()}\r\n            <Button variant=\"secondary\" onClick={() => this.closeModal()}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.showRequisitesModal}\r\n          onHide={() => this.closeModal()}\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Missing requisites for {this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{this.getMissingCourseRequisites()}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={() => this.state.addFunc()}>Add Anyway</Button>\r\n            <Button variant=\"secondary\" onClick={() => this.closeRequisiteModal()}>Back</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card >\r\n    );\r\n  }\r\n\r\n  inCart() {\r\n    if (this.props.courseKey in this.props.cartCourses) {\r\n      if (!this.props.cartMode) {\r\n        return true;\r\n      }\r\n    } else return false;\r\n  }\r\n\r\n  getCourseButton() {\r\n    let buttonVariant = \"dark\";\r\n    let buttonOnClick = () => this.addCourse();\r\n    let buttonText = \"Add Course\";\r\n\r\n    if (this.props.courseKey in this.props.cartCourses) {\r\n      buttonVariant = \"outline-dark\";\r\n      buttonOnClick = () => this.removeCourse();\r\n      buttonText = \"Remove Course\";\r\n    }\r\n\r\n    return (\r\n      <Button variant={buttonVariant} onClick={buttonOnClick}>\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  getSections() {\r\n    let sections = [];\r\n\r\n    for (let i = 0; i < this.props.data.sections.length; i++) {\r\n      sections.push(\r\n        <Section\r\n          key={this.props.data.number + i}\r\n          data={this.props.data.sections[i]}\r\n          addCartCourse={this.props.addCartCourse}\r\n          removeCartCourse={this.props.removeCartCourse}\r\n          cartCourses={this.props.cartCourses}\r\n          courseKey={this.props.courseKey}\r\n          sectionKey={i}\r\n          missingRequisites={this.missingRequisitesLaunchModal}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <Accordion defaultActiveKey=\"0\">{sections}</Accordion>;\r\n  }\r\n\r\n  missingRequisitesLaunchModal(section, subsection) {\r\n    let completedCourses = this.props.completedCourses;\r\n    let requisites = this.props.data.requisites;\r\n    let missingRequisites = [];\r\n    for (let requisite of requisites) {\r\n      let requisiteMet = false;\r\n      for (let courseNumber of requisite) {\r\n        for (let completedCourse of completedCourses) {\r\n          if (courseNumber == completedCourse.number) {\r\n            requisiteMet = true;\r\n            break;\r\n          }\r\n        }\r\n        if (requisiteMet) {\r\n          break;\r\n        }\r\n      }\r\n      if (!requisiteMet) {\r\n        missingRequisites.push(requisite);\r\n      }\r\n    }\r\n    if (missingRequisites.length > 0) {\r\n      return this.openRequisiteModal(section, subsection);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addCourse() {\r\n    if (this.missingRequisitesLaunchModal() === false) {\r\n      this.props.addCartCourse({\r\n        course: this.props.courseKey,\r\n      });\r\n    }\r\n  }\r\n\r\n  addToCart() {\r\n    this.closeRequisiteModal();\r\n    // This is where we should check if \r\n    this.props.addCartCourse({\r\n      course: this.props.courseKey,\r\n    });\r\n  }\r\n\r\n  getMissingCourseRequisites() {\r\n    let completedCourses = this.props.completedCourses;\r\n    let requisites = this.props.data.requisites;\r\n    let missingRequisites = [];\r\n    for (let requisite of requisites) {\r\n      let requisiteMet = false;\r\n      for (let courseNumber of requisite) {\r\n        if (!completedCourses) {\r\n          break;\r\n        }\r\n        for (let completedCourse of completedCourses) {\r\n          if (courseNumber == completedCourse.number) {\r\n            requisiteMet = true;\r\n            break;\r\n          }\r\n        }\r\n        if (requisiteMet) {\r\n          break;\r\n        }\r\n      }\r\n      if (!requisiteMet) {\r\n        missingRequisites.push(requisite);\r\n      }\r\n    }\r\n\r\n    let missingRequisitesDisplay = [];\r\n\r\n    console.log(\"Requisites: \");\r\n    for (let requisite of missingRequisites) {\r\n      console.log(requisite.toString());\r\n      let reqString = \"\";\r\n      if (requisite.length > 1) {\r\n        for (let i = 0; i < requisite.length; i++) {\r\n          reqString += requisite[i].toString();\r\n          if (i + 1 != requisite.length) {\r\n            reqString += \" or \";\r\n          }\r\n        }\r\n      } else {\r\n        reqString = requisite[0].toString();\r\n      }\r\n      missingRequisitesDisplay.push(<li>{reqString}</li>);\r\n    }\r\n\r\n    return (\r\n      <ul>{missingRequisitesDisplay}</ul>\r\n    )\r\n  }\r\n\r\n  openRequisiteModal(section, subsection) {\r\n    console.log(\"Opening Requisite Modal\");\r\n    console.log(section, subsection);\r\n    if (!section && !subsection) {\r\n      this.setState({\r\n        showRequisitesModal: true, addFunc: () => {\r\n          console.log(\"Adding Course\");\r\n          this.props.addCartCourse({\r\n            course: this.props.courseKey,\r\n          });\r\n          this.closeRequisiteModal();\r\n        }\r\n      });\r\n    }\r\n    else if (section && !subsection) {\r\n      this.setState({\r\n        showRequisitesModal: true, addFunc: () => {\r\n          console.log(\"Adding Section\");\r\n          this.props.addCartCourse({\r\n            course: this.props.courseKey,\r\n            section: section,\r\n          });\r\n          this.closeRequisiteModal();\r\n        }\r\n      });\r\n    } else if (subsection) {\r\n      this.setState({\r\n        showRequisitesModal: true, addFunc: () => {\r\n          console.log(\"Adding Subsection\");\r\n          this.props.addCartCourse({\r\n            course: this.props.courseKey,\r\n            section: section,\r\n            subsection: subsection,\r\n          });\r\n          this.closeRequisiteModal();\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n  closeRequisiteModal() {\r\n    this.setState({ showRequisitesModal: false });\r\n  }\r\n  removeCourse() {\r\n    this.props.removeCartCourse({\r\n      course: this.props.courseKey,\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  setExpanded(value) {\r\n    this.setState({ expanded: value });\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = \"▼\";\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if (this.state.expanded) {\r\n      buttonText = \"▲\";\r\n      buttonOnClick = () => this.setExpanded(false);\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        variant=\"outline-dark\"\r\n        style={{\r\n          width: 25,\r\n          height: 25,\r\n          fontSize: 12,\r\n          padding: 0,\r\n          position: \"absolute\",\r\n          right: 20,\r\n          top: 20,\r\n        }}\r\n        onClick={buttonOnClick}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  getDescription() {\r\n    if (this.state.expanded) {\r\n      return <div>{this.props.data.description}</div>;\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    // if (this.props.data.credits === 1) return \"1 credit\";\r\n    // else return this.props.data.credits + \" credits\";\r\n    return this.props.data.credits + \" Cr.\";\r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Course from \"./Course\";\r\n\r\nclass CourseArea extends React.Component {\r\n  getCourses() {\r\n    let courses = [];\r\n\r\n    if (!this.props.cartMode) {\r\n      courses.push(\r\n        <>\r\n          <h1>Course Selection</h1>\r\n          <h4>View courses, or add/remove them from your cart.</h4>\r\n        </>\r\n      );\r\n      for (let i = 0; i < this.props.data.length; i++) {\r\n        courses.push(\r\n          <Course\r\n            key={\"course_\" + i}\r\n            data={this.props.data[i]}\r\n            courseKey={this.props.data[i].number}\r\n            addCartCourse={(data) => this.props.addCartCourse(data)}\r\n            removeCartCourse={(data) => this.props.removeCartCourse(data)}\r\n            cartCourses={this.props.cartCourses}\r\n            completedCourses={this.props.completedCourses}\r\n            cartMode={this.props.cartMode}\r\n          />\r\n        );\r\n      }\r\n    } else {\r\n      courses.push(\r\n        <>\r\n          <h1>Course Cart</h1>\r\n          <h4>Add or remove courses from your cart.</h4>\r\n        </>\r\n      );\r\n      for (let i = 0; i < this.props.data.length; i++) {\r\n\r\n        courses.push(\r\n          <Course\r\n            key={\"cartItem_\" + this.props.data[i].number}\r\n            data={this.props.data[i]}\r\n            courseKey={this.props.data[i].number}\r\n            addCartCourse={(data) => this.props.addCartCourse(data)}\r\n            removeCartCourse={(data) => this.props.removeCartCourse(data)}\r\n            cartCourses={this.props.cartCourses}\r\n            completedCourses={this.props.completedCourses}\r\n            cartMode={this.props.cartMode}\r\n          />\r\n        );\r\n      }\r\n      if (courses.length === 1) {\r\n        courses.push(\r\n          <div>\r\n            <h6 style={{ margin: \"20px 20px\" }}>Cart is empty.</h6>\r\n          </div >\r\n        )\r\n      }\r\n    }\r\n\r\n    return courses;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return JSON.stringify(this.props) !== JSON.stringify(nextProps);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: 5 }}>\r\n        <div>{this.getCourses()}</div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default CourseArea;\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nclass CompletedCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setRating = this.setRating.bind(this);\r\n        this.rating = React.createRef();\r\n    }\r\n\r\n    setRating() {\r\n\r\n        if (!this.rating.current) {\r\n            return;\r\n        }\r\n        this.props.updateRating(this.props.courseData.number, this.rating.current.value);\r\n    }\r\n    getCredits() {\r\n        let courseData = this.props.courseData;\r\n        if (!courseData) {\r\n            return null;\r\n        }\r\n        let credits = courseData.credits;\r\n        return (\r\n            <span>{credits} Cr.</span>\r\n        )\r\n    }\r\n\r\n    getRating() {\r\n        let courseData = this.props.courseData;\r\n        if (!courseData) {\r\n            return null;\r\n        }\r\n        let rating = courseData.rating;\r\n        if (rating == \"No Rating\") {\r\n            return <span>No Rating</span>;\r\n        }\r\n        return (\r\n            <span>Rating: {rating}</span>\r\n        )\r\n    }\r\n\r\n    getRatingOptionLabel() {\r\n        if (!this.rating.current) {\r\n            return;\r\n        }\r\n        if (this.rating.current.value == \"No Rating\") {\r\n            return <Form.Label>Rate this Course: </Form.Label>\r\n        }\r\n        else {\r\n            return <Form.Label>Change Rating: </Form.Label>\r\n        }\r\n    }\r\n\r\n    getRatingOptions() {\r\n        let ratingOptions = [];\r\n        for (const rating of this.props.ratings) {\r\n            ratingOptions.push(<option key={rating}>{rating}</option>);\r\n        }\r\n\r\n        return ratingOptions;\r\n    }\r\n    render() {\r\n        let courseData = this.props.courseData;\r\n        if (!courseData) {\r\n            return null;\r\n        }\r\n        let number = courseData.number;\r\n        let name = courseData.name;\r\n        let credits = this.getCredits();\r\n        let rating = this.getRating();\r\n        if (!number) {\r\n            return null;\r\n        }\r\n        // return (\r\n        //     <div className=\"CompletedCourse\">\r\n        //         {name} | {number}\r\n        //     </div>\r\n        // )\r\n        return (\r\n            <Card style={{ width: \"66%\", marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <div style={{ maxWidth: 500 }}>{name}</div>\r\n                    </Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                        {number} - {credits} - {rating}\r\n                    </Card.Subtitle>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formRatings\">\r\n                            {this.getRatingOptionLabel()}\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                ref={this.rating}\r\n                                onChange={() => this.setRating()}\r\n                                style={{ height: \"125%\" }}\r\n                            >\r\n                                {this.getRatingOptions()}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </Card.Body>\r\n            </Card >\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompletedCourse;","import React, { Component } from 'react'\r\nimport CompletedCourse from './CompletedCourse';\r\n\r\nclass CompletedCourseArea extends Component {\r\n\r\n    getCourses() {\r\n        let courses = this.props.courses;\r\n        if (!courses) {\r\n            return [];\r\n        }\r\n        let completedCourses = [];\r\n        for (let i = 0; i < courses.length; i++) {\r\n            completedCourses.push(\r\n                <CompletedCourse\r\n                    courseData={courses[i]}\r\n                    ratings={this.props.ratings}\r\n                    updateRating={this.props.updateRating}\r\n                />\r\n            )\r\n        }\r\n        return completedCourses;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"CompletedCourseArea\" style={{ margin: 5 }}>\r\n                <h1>Completed Courses</h1>\r\n                <h4>View and rate completed courses.</h4>\r\n                {this.getCourses()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompletedCourseArea;","import React, { Component } from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Accordion } from 'react-bootstrap';\r\nclass RecommendedCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n        };\r\n    }\r\n    getRecommenderDisplay(recommenders) {\r\n        if (!recommenders) {\r\n            return null;\r\n        }\r\n\r\n        let recommenderDisplay = [];\r\n        for (let i = 0; i < recommenders.length; i++) {\r\n            let keywordDisplay = [];\r\n            for (let keyword of recommenders[i].keywords) {\r\n                keywordDisplay.push(\r\n                    <li>{keyword}</li>\r\n                );\r\n            }\r\n            recommenderDisplay.push(\r\n                <div>\r\n                    {recommenders[i].course.number} | Matching Interests:\r\n                    <ul>\r\n                        {keywordDisplay}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n        return recommenderDisplay;\r\n    }\r\n\r\n    setExpanded(value) {\r\n        this.setState({ expanded: value });\r\n    }\r\n\r\n    getExpansionButton() {\r\n        let buttonText = \"▼\";\r\n        let buttonOnClick = () => this.setExpanded(true);\r\n\r\n        if (this.state.expanded) {\r\n            buttonText = \"▲\";\r\n            buttonOnClick = () => this.setExpanded(false);\r\n        }\r\n\r\n        return (\r\n            <Button\r\n                variant=\"outline-dark\"\r\n                style={{\r\n                    width: 25,\r\n                    height: 25,\r\n                    fontSize: 12,\r\n                    padding: 0,\r\n                    position: \"absolute\",\r\n                    right: 20,\r\n                    top: 20,\r\n                }}\r\n                onClick={buttonOnClick}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    getDescription() {\r\n        if (this.state.expanded) {\r\n            return <div>{this.props.course.description}</div>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let course = this.props.course;\r\n        let recommenders = course.recommenders;\r\n        let name = course.name;\r\n        let number = course.number;\r\n        let credits = course.credits;\r\n        let description = course.description;\r\n\r\n        return (\r\n            <div className=\"RecommendedCourse\">\r\n                <Card style={{ width: \"66%\", marginTop: \"5px\", marginBottom: \"5px\" }}>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <div style={{ maxWidth: 500 }}>{name}</div>\r\n                            {this.getExpansionButton()}\r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">\r\n                            {number} - {credits} Cr.\r\n                        </Card.Subtitle>\r\n                        <Card.Subtitle className=\"mb-4\">\r\n                            {this.getDescription()}\r\n                        </Card.Subtitle>\r\n                        <Card.Subtitle className=\"mb-2 \">\r\n                            <p className=\"fw-bold\">Because you liked:</p>\r\n                            {this.getRecommenderDisplay(recommenders)}\r\n                        </Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecommendedCourse;","import React, { Component } from 'react'\r\nimport RecommendedCourse from './RecommendedCourse';\r\n\r\nclass RecommendedCourseArea extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    // Create empty array of recommended courses\r\n    // Iterate through allCourses\r\n    //  let myCourse =\r\n    // if course is not completed\r\n    //      \r\n\r\n    getRecommendedCourses() {\r\n        let allCourses = this.props.allCourses;\r\n        let completedCourses = this.props.completedCourses;\r\n\r\n        let recommendedCourses = [];\r\n        for (let i = 0; i < allCourses.length; i++) {\r\n            let course = allCourses[i];\r\n            let recommendedCourse = {\r\n                name: course.name,\r\n                number: course.number,\r\n                description: course.description,\r\n                credits: course.credits,\r\n                keywords: course.keywords,\r\n                requisites: course.requisites,\r\n                sections: course.sections,\r\n                recommenders: [],\r\n            }\r\n\r\n\r\n            for (let completedCourse of completedCourses) {\r\n                if (course.number == completedCourse.number) {\r\n                    break;\r\n                }\r\n                else if (completedCourse.rating >= 3) {\r\n                    let recommender = {\r\n                        course: completedCourse,\r\n                        keywords: [],\r\n                    }\r\n                    for (let keyword of completedCourse.keywords) {\r\n                        if (course.keywords.includes(keyword)) {\r\n                            recommender.keywords.push(keyword);\r\n                        }\r\n                    }\r\n                    if (recommender.keywords.length > 0) {\r\n                        recommendedCourse.recommenders.push(recommender);\r\n                    }\r\n                }\r\n            }\r\n            if (recommendedCourse.recommenders.length > 0) {\r\n                recommendedCourses.push(recommendedCourse);\r\n            }\r\n        }\r\n        return recommendedCourses;\r\n    }\r\n\r\n\r\n    getRecommendations() {\r\n        let recommendedCourses = this.getRecommendedCourses();\r\n        if (!recommendedCourses) {\r\n            return null;\r\n        }\r\n\r\n        let recommendations = [];\r\n        for (let recommendedCourse of recommendedCourses) {\r\n            let recommendation = <RecommendedCourse course={recommendedCourse} />\r\n            recommendations.push(recommendation);\r\n        }\r\n        if (recommendations.length < 1) {\r\n            recommendations.push(\r\n                <h6 style={{ margin: \"20px 20px\" }}>No recommended courses. Try rating your completed courses in order for recommendations to be generated.</h6>\r\n            )\r\n        }\r\n        return recommendations;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RecommendedCourseArea\" style={{ margin: 5 }}>\r\n                <h1>Recommended Courses</h1>\r\n                <h4>View recommended courses:</h4>\r\n                <h5 className=\"text-muted\">Courses in which you meet the pre-requisites, and which share interests with past courses you've rated highly.</h5>\r\n                {this.getRecommendations()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecommendedCourseArea;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport CourseArea from \"./CourseArea\";\r\nimport CompletedCourseArea from \"./CompletedCourseArea\";\r\nimport RecommendedCourseArea from \"./RecommendedCourseArea\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\n\r\nconst HOST = {\r\n  WEB: \"https://cs571.cs.wisc.edu/api/react/\",\r\n  LOCAL: \"http://localhost:5000/api/react/\"\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allCourses: [],\r\n      filteredCourses: [],\r\n      subjects: [],\r\n      interests: [],\r\n      cartCourses: {},\r\n      completedCourses: [],\r\n      ratings: [],\r\n      recommendedCourses: [],\r\n    };\r\n\r\n    this.updateRating = this.updateRating.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadInitialState();\r\n  }\r\n\r\n  async loadInitialState() {\r\n    //let courseURL = \"http://cs571.cs.wisc.edu:53706/api/react/classes\";\r\n    let courseURL = HOST.WEB + \"classes\";\r\n    let courseData = await (await fetch(courseURL)).json();\r\n\r\n    //let completedCourseURL = \"http://cs571.cs.wisc.edu:53706/api/react/students/5022025924/classes/completed\";\r\n    let completedCourseURL = HOST.WEB + \"students/5022025924/classes/completed/\";\r\n    let completedCourseData = await (await fetch(completedCourseURL)).json();\r\n    this.setState({\r\n      allCourses: courseData,\r\n      filteredCourses: courseData,\r\n      subjects: this.getSubjects(courseData),\r\n      interests: this.getInterests(courseData),\r\n      completedCourses: this.getCompletedCourses(courseData, completedCourseData.data),\r\n      ratings: this.getRatings(),\r\n    });\r\n  }\r\n\r\n\r\n  getSubjects(data) {\r\n    let subjects = [];\r\n    subjects.push(\"All\");\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (subjects.indexOf(data[i].subject) === -1)\r\n        subjects.push(data[i].subject);\r\n    }\r\n\r\n    return subjects;\r\n  }\r\n\r\n  getInterests(data) {\r\n    let interests = [];\r\n    interests.push(\"All\");\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let keywords = data[i].keywords;\r\n      for (let j = 0; j < keywords.length; j++) {\r\n        if (!interests.includes(keywords[j])) {\r\n          interests.push(keywords[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return interests;\r\n  }\r\n\r\n  getRatings() {\r\n    let ratings = [];\r\n    ratings.push(\"No Rating\");\r\n\r\n    for (let i = 1; i <= 5; i++) {\r\n      ratings.push(i.toString());\r\n    }\r\n    return ratings;\r\n  }\r\n\r\n  setCourses(courses) {\r\n    this.setState({ filteredCourses: courses });\r\n  }\r\n\r\n  getCompletedCourses(courses, numbers) {\r\n    let completedCourses = [];\r\n    for (let course of courses) {\r\n      for (let number of numbers) {\r\n        if (course.number == number) {\r\n          let thisCourse = {\r\n            name: course.name,\r\n            number: course.number,\r\n            credits: course.credits,\r\n            description: course.description,\r\n            subject: course.subject,\r\n            keywords: course.keywords,\r\n            sections: course.sections,\r\n            rating: \"No Rating\",\r\n          }\r\n          completedCourses.push(thisCourse);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return completedCourses;\r\n  }\r\n\r\n  updateRating(number, score) {\r\n    let courses = this.state.completedCourses;\r\n    for (let i = 0; i < courses.length; i++) {\r\n      let course = courses[i];\r\n      if (course.number == number) {\r\n        courses[i].rating = score;\r\n      }\r\n    }\r\n    this.setState({ completedCourses: courses });\r\n    console.log(\"Rating Updated\");\r\n  }\r\n\r\n  addCartCourse(data) {\r\n    let newCartCourses = JSON.parse(JSON.stringify(this.state.cartCourses)); // I think this is a hack to deepcopy\r\n    let courseIndex = this.state.allCourses.findIndex((x) => {\r\n      return x.number === data.course;\r\n    });\r\n    if (courseIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    if (\"subsection\" in data) {\r\n      if (data.course in this.state.cartCourses) {\r\n        if (data.section in this.state.cartCourses[data.course]) {\r\n          newCartCourses[data.course][data.section].push(data.subsection);\r\n        } else {\r\n          newCartCourses[data.course][data.section] = [];\r\n          newCartCourses[data.course][data.section].push(data.subsection);\r\n        }\r\n      } else {\r\n        newCartCourses[data.course] = {};\r\n        newCartCourses[data.course][data.section] = [];\r\n        newCartCourses[data.course][data.section].push(data.subsection);\r\n      }\r\n    } else if (\"section\" in data) {\r\n      if (data.course in this.state.cartCourses) {\r\n        newCartCourses[data.course][data.section] = [];\r\n\r\n        for (\r\n          let i = 0;\r\n          i <\r\n          this.state.allCourses[courseIndex].sections[data.section].subsections\r\n            .length;\r\n          i++\r\n        ) {\r\n          newCartCourses[data.course][data.section].push(\r\n            this.state.allCourses[courseIndex].sections[data.section]\r\n              .subsections[i]\r\n          );\r\n        }\r\n      } else {\r\n        newCartCourses[data.course] = {};\r\n        newCartCourses[data.course][data.section] = [];\r\n        for (\r\n          let i = 0;\r\n          i <\r\n          this.state.allCourses[courseIndex].sections[data.section].subsections\r\n            .length;\r\n          i++\r\n        ) {\r\n          newCartCourses[data.course][data.section].push(\r\n            this.state.allCourses[courseIndex].sections[data.section]\r\n              .subsections[i]\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      newCartCourses[data.course] = {};\r\n\r\n      for (\r\n        let i = 0;\r\n        i < this.state.allCourses[courseIndex].sections.length;\r\n        i++\r\n      ) {\r\n        newCartCourses[data.course][i] = [];\r\n\r\n        for (\r\n          let c = 0;\r\n          c < this.state.allCourses[courseIndex].sections[i].subsections.length;\r\n          c++\r\n        ) {\r\n          newCartCourses[data.course][i].push(\r\n            this.state.allCourses[courseIndex].sections[i].subsections[c]\r\n          );\r\n        }\r\n      }\r\n    }\r\n    this.setState({ cartCourses: newCartCourses });\r\n  }\r\n\r\n  removeCartCourse(data) {\r\n    let newCartCourses = JSON.parse(JSON.stringify(this.state.cartCourses));\r\n\r\n    if (\"subsection\" in data) {\r\n      newCartCourses[data.course][data.section].forEach((_subsection) => {\r\n        if (_subsection.number === data.subsection.number) {\r\n          newCartCourses[data.course][data.section].splice(\r\n            newCartCourses[data.course][data.section].indexOf(_subsection),\r\n            1\r\n          );\r\n        }\r\n      });\r\n      if (newCartCourses[data.course][data.section].length === 0) {\r\n        delete newCartCourses[data.course][data.section];\r\n      }\r\n      if (Object.keys(newCartCourses[data.course]).length === 0) {\r\n        delete newCartCourses[data.course];\r\n      }\r\n    } else if (\"section\" in data) {\r\n      delete newCartCourses[data.course][data.section];\r\n      if (Object.keys(newCartCourses[data.course]).length === 0) {\r\n        delete newCartCourses[data.course];\r\n      }\r\n    } else {\r\n      delete newCartCourses[data.course];\r\n    }\r\n    this.setState({ cartCourses: newCartCourses });\r\n  }\r\n\r\n  getCartData() {\r\n    let cartData = [];\r\n\r\n    for (const courseKey of Object.keys(this.state.cartCourses)) {\r\n      let course = this.state.allCourses.find((x) => {\r\n        return x.number === courseKey;\r\n      });\r\n\r\n      cartData.push(course);\r\n    }\r\n    return cartData;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tabs\r\n          defaultActiveKey=\"search\"\r\n          style={{\r\n            position: \"fixed\",\r\n            zIndex: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <Tab eventKey=\"select\" title=\"Course Selection\" style={{ paddingTop: \"5vh\" }}>\r\n            <Sidebar\r\n              setCourses={(courses) => this.setCourses(courses)}\r\n              courses={this.state.allCourses}\r\n              subjects={this.state.subjects}\r\n              interests={this.state.interests}\r\n            />\r\n            <div style={{ marginLeft: \"20vw\" }}>\r\n              <CourseArea\r\n                data={this.state.filteredCourses}\r\n                cartMode={false}\r\n                addCartCourse={(data) => this.addCartCourse(data)}\r\n                removeCartCourse={(data) => this.removeCartCourse(data)}\r\n                cartCourses={this.state.cartCourses}\r\n                completedCourses={this.state.completedCourses}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"completed\" title=\"Completed Courses\" style={{ paddingTop: \"5vh\" }}>\r\n            <div style={{ marginLeft: \"20vw\" }}>\r\n              <CompletedCourseArea\r\n                courses={this.state.completedCourses}\r\n                ratings={this.state.ratings}\r\n                updateRating={this.updateRating}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"recommended\" title=\"Recommended Courses\" style={{ paddingTop: \"5vh\" }}>\r\n            <div style={{ marginLeft: \"20vw\" }}>\r\n              <RecommendedCourseArea\r\n                allCourses={this.state.allCourses}\r\n                completedCourses={this.state.completedCourses}\r\n                interests={this.state.interests}\r\n              />\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"cart\" title=\"Cart\" style={{ paddingTop: \"5vh\" }}>\r\n            <div style={{ marginLeft: \"20vw\" }}>\r\n              <CourseArea\r\n                data={this.getCartData()}\r\n                cartMode={true}\r\n                addCartCourse={(data) => this.addCartCourse(data)}\r\n                removeCartCourse={(data) => this.removeCartCourse(data)}\r\n                cartCourses={this.state.cartCourses}\r\n              />\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}